Main Properties
^^^^^^^^^^^^^^^

+------------------------+--------------------+--------------------------------------------------------------------------------------------+
| **Main Properties**    | Possible Values    | Description                                                                                |
+========================+====================+============================================================================================+
| **Id**                 | nnnnn              | Id is a unique :term:`GC` identifier that is a string of 5 or more digits long. It is      |
|                        |                    | generated by DreamFace and can be used when refering to this field in script.              |
|                        |                    |                                                                                            |
+------------------------+--------------------+--------------------------------------------------------------------------------------------+
| **Template**           | template name      | This is the chosen name of the :term:`GC` template to be used as the basis of the current  |
|                        |                    | :term:`GC`. It is set to 'default' by default. For more information on how to use Templates|
|                        |                    | see :ref:`dfx-templates-label`.                                                            |
|                        |                    |                                                                                            |
+------------------------+--------------------+--------------------------------------------------------------------------------------------+
| **Name**               | txtText#           | Name is a reference to the component's DOM element. It can be used to dynamically access   |
|                        |                    | and set component properties. DreamFace gives a default name that refers to the :term:`GC` |
|                        |                    | followed a number which cooresponds to the order in which the control was created. For     |
|                        |                    | example, a *statictext* would have a default name of *txtText#*. The second statictext     |
|                        |                    | created will have a default name of *txtText2*. Name is not required and can be removed if |
|                        |                    | needed. For a complete list see :ref:`style-gcnames-label`.                                |
|                        |                    |                                                                                            |
+------------------------+--------------------+--------------------------------------------------------------------------------------------+
| **Text**               | string             | This is the text that will be displayed in the field. This is a string that should be in   |
|                        |         or         | quotes, otherwise it will be interpreted as a scope variable.                              |
|                        | angular expression |                                                                                            |
|                        |         or         | **Text can also be an angular expression** which will be evaluated at runtime.             |
|                        | scope variable     |                                                                                            |
|                        |                    | See more about how to define :ref:`angular-expression-label` here.                         |
|                        |                    |                                                                                            |
|                        |                    | **Note** - If your label doesn't appear in Preview mode, make sure the text is in quotes.  |
|                        |                    | If you have an angular expression that does not appear in Preview mode it means that their |
|                        |                    | most likely an error in your angular expression. Take a look at the sample angular         |
|                        |                    | expressions in the Samples Gallery. If your expression contains an apostrophe, use double  |
|                        |                    | quotes. For example "It's a button" would evaluate to: *It's a button* at runtime or in    |
|                        |                    | in Preview Mode when testing the View.                                                     |
|                        |                    |                                                                                            |
+------------------------+--------------------+--------------------------------------------------------------------------------------------+
| **Display**            | *true* or *false*  | This is a property to show or hide the Text.                                               |
|                        |        or          | The value can either be a literal *true* to display the field or *false* to hide it, or it |
|                        | boolean expression | can be a angular expression that evaulates to *true* or *false*, for example,              |
|                        |        or          | 5 > 2 would evaluate to *true* and 5 < 2 would evaluate to *false*. It is also possible    |
|                        |  scope variable    | to use a $scope variable (defined in the script of the View in the Script Editor).         |
|                        |                    |                                                                                            |
|                        |                    | On the right hand side of the field you will see **...** indicating that help in defining  |
|                        |                    | expression is available. Click on the *...** and a Expression Editor will be displayed,    |
|                        |                    | indicating existing scope variables and functions. You can use scope variables as part of  |
|                        |                    | of your angular expression, for example, myVar == 5, would evaluate the expression using   |
|                        |                    | the value stored in the scope variable myVar, if equal to 5 the expression would evaluate  |
|                        |                    | to **true** and the text would be displayed.                                               |
|                        |                    |                                                                                            |
|                        |                    | See :ref:`angular-expression-label`  for more help on Angular Boolean Expressions          |
+------------------------+--------------------+--------------------------------------------------------------------------------------------+

|
